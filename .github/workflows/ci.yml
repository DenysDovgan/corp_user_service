name: CI Pipeline

on:
  push:
    branches:
      - Murloc-master-stream7
  pull_request:
    branches:
      - Murloc-master-stream7

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test_user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Java
        uses: actions/setup-java@v4.5.0
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Cache Gradle packages
        uses: actions/cache@v4.1.2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U test_user; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Run tests
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: test_user
          DB_PASSWORD: test_password
          DB_NAME: test_db
        run: ./gradlew test --no-daemon #-x MapperEventTest

      - name: Upload test results
        if: always() # Ensures this step runs even if tests fail
        uses: actions/upload-artifact@v4.4.3
        with:
          name: test-results
          path: build/test-results

      - name: Build the project
        run: ./gradlew clean build --no-daemon